package com.example.Seats.beans;

import java.util.HashMap;
import java.util.List;

import com.example.Seats.beans.SeatsAdapter.ItemHodler;
import com.example.Seats.views.TubleActivity;
import com.example.ppu_infusion.R;

import android.content.Context;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.BaseAdapter;
import android.widget.ImageView;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import android.widget.RadioGroup.OnCheckedChangeListener;
import android.widget.TextView;

public class TubleAdapter extends BaseAdapter {
	private TubleActivity context;
	private List<GetStartInfo> getStartInfos;
	HashMap<String, Boolean> states = new HashMap<String, Boolean>();

	public TubleAdapter(TubleActivity context, List<GetStartInfo> getStartInfos) {
		super();
		this.context = context;
		this.getStartInfos = getStartInfos;

	}

	@Override
	public int getCount() {
		// TODO Auto-generated method stub
		return getStartInfos.size();
	}

	@Override
	public Object getItem(int position) {
		// TODO Auto-generated method stub
		return getStartInfos.get(position);
	}

	@Override
	public long getItemId(int position) {
		// TODO Auto-generated method stub
		return position;
	}

	@Override
	public View getView(final int position, View convertView, ViewGroup parent) {
		// TODO Auto-generated method stub
		ItemHodler hodler;
		if (convertView == null) {
			convertView = LayoutInflater.from(context).inflate(
					R.layout.adapter_tuble, null);
			hodler = new ItemHodler();
			hodler.tadio = (RadioButton) convertView.findViewById(R.id.radio);
			convertView.setTag(hodler);
		} else {
			hodler = (ItemHodler) convertView.getTag();
		}
		final GetStartInfo info = getStartInfos.get(position);
		hodler.tadio.setText(info.getDRUGNAME());

		final RadioButton radio = (RadioButton) convertView
				.findViewById(R.id.radio);
		hodler.tadio = radio;
		hodler.tadio.setOnClickListener(new View.OnClickListener() {

			public void onClick(View v) {

				// 重置，确保最多只有一项被选中
				for (String key : states.keySet()) {
					states.put(key, false);

				}
				states.put(String.valueOf(position), radio.isChecked());
				TubleAdapter.this.notifyDataSetChanged();
				context.GetInfo(info);
			}
		});

		boolean res = false;
		if (states.get(String.valueOf(position)) == null
				|| states.get(String.valueOf(position)) == false) {
			res = false;
			states.put(String.valueOf(position), false);
		} else
			res = true;

		hodler.tadio.setChecked(res);
		return convertView;
	}

	class ItemHodler {
		RadioButton tadio;
	}
}
