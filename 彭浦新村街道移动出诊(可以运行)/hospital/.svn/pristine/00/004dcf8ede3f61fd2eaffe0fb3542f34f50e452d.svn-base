package com.fc.has.views;

//import java.util.ArrayList;
//import java.util.HashMap;
//import java.util.LinkedList;
//import java.util.Map;
//
//import org.json.JSONArray;
//import org.json.JSONException;
//import org.json.JSONObject;
//
//import com.example.companytask.CompanyTask;
//import com.example.hospital.R;
//import com.example.hospital.R.layout;
//import com.example.service.MainService;
//import com.fc.helper.BaseActivity;
//import com.fc.helper.IActivity;
//import com.fc.unidentified.beans.UnideInfo;
//import com.fc.unidentified.beans.UnidentifiedAdapter;
//import com.fc.unidentified.views.UnidentifiedActivity;
//import com.handmark.pulltorefresh.library.PullToRefreshBase;
//import com.handmark.pulltorefresh.library.PullToRefreshBase.OnRefreshListener2;
//import com.handmark.pulltorefresh.library.PullToRefreshListView;
//
//import android.app.Activity;
//import android.graphics.PorterDuff.Mode;
//import android.os.AsyncTask;
//import android.os.Bundle;
//import android.util.Log;
//import android.view.KeyEvent;
//import android.view.Menu;
//import android.view.MenuItem;
//import android.widget.ListView;
//
//public class HasDiagnosisActivity extends BaseActivity implements IActivity {
//	private UnidentifiedAdapter adapter;
//	private PullToRefreshListView mPullRefreshListView;
//	private ArrayList<UnideInfo> list = new ArrayList<UnideInfo>();
//	public static final int VISITED_REFRESH = 1;
//	private String data;
//	//private int index = 0;
//	private int row=20;
//	@Override
//	protected void onCreate(Bundle savedInstanceState) {
//		super.onCreate(savedInstanceState);
//		setContentView(R.layout.activity_has_diagnosis);
//		init();
//		initView();
//		getPageList(row);		
//		adapter=new UnidentifiedAdapter(this, list);
//		mPullRefreshListView.setAdapter(adapter);
//		mPullRefreshListView
//				.setOnRefreshListener(new OnRefreshListener2<ListView>() {
//					
//					public void onPullUpToRefresh(
//							PullToRefreshBase<ListView> refreshView) {
//							
//							new GetDataTask().execute(); 
//							mPullRefreshListView.getRefreshableView().setSelection(row);
//					}
//
//					@Override
//					public void onPullDownToRefresh(
//							PullToRefreshBase<ListView> refreshView) {
//						// TODO Auto-generated method stub
//						new GetDataTask().execute();
//					}
//				});
//		
//	}
//
//	private class GetDataTask extends AsyncTask<Void, Void, String>  
//    {  
//  
//        @Override  
//        protected String doInBackground(Void... params)  
//        {  
//           try {
//			Thread.sleep(1000);
//		} catch (InterruptedException e) {
//			e.printStackTrace();
//		}
//            return "" + (row+=20);  
//        }  
//  
//        @Override  
//        protected void onPostExecute(String result)  
//        {  
//        	getPageList(Integer.valueOf(result));  
//        	adapter.notifyDataSetChanged(); 
//            mPullRefreshListView.onRefreshComplete();  
//        }  
//    }  
//  
// 
//	
//	private void initView() {
//		mPullRefreshListView = (PullToRefreshListView) findViewById(R.id.pull_refresh_list);
//		mPullRefreshListView
//				.setMode(com.handmark.pulltorefresh.library.PullToRefreshBase.Mode.BOTH);
//		
//	}
//
//	@Override
//	public void init() {
//		MainService.addActivity(this);
//	}
//
//	@Override
//	public void refresh(Object... params) {
//		switch (Integer.valueOf(params[0].toString().trim())) {
//		case HasDiagnosisActivity.VISITED_REFRESH:
//			if (params[1] != null) {
//				data = params[1].toString().trim();
//				Log.i("aaaa", "" + data);
//				parseJsonList(data);
//				// showListView(list);
//			}
//		}
//	}
//
//	private void parseJsonList(String value) {
//		list.clear();
//		try {
//			JSONArray array = new JSONArray(value);
//			for (int i = 0; i < array.length(); i++) {
//				JSONObject object = array.getJSONObject(i);
//				UnideInfo info = new UnideInfo();
//				info.setCard(object.getString("CardNo"));
//				info.setName(object.getString("PatientName"));
//				info.setSex(object.getString("Gender"));
//				info.setAge(object.getString("Age"));
//				info.setAddress(object.getString("VisitAddr"));
//				info.setBirthDate(object.getString("BirthDate"));
//				info.setRCName(object.getString("RCName"));
//				info.setAppointVisitDate(object.getString("AppointVisitDate"));
//				info.setContactor(object.getString("Contactor"));
//				info.setContactPhone(object.getString("ContactPhone"));
//				info.setRegRemark(object.getString("RegRemark"));
//				info.setRegId(object.getInt("RegId"));
//				info.setPatientId(object.getInt("PatientId"));
//
//				list.add(info);
//			}
//			// adapter=new UnidentifiedAdapter(this, list);
//			// listView.setAdapter(adapter);
//		} catch (JSONException e) {
//			// TODO Auto-generated catch block
//			e.printStackTrace();
//		}
//	}
//
//	private void getPageList(int row) {
//		Map<String, String> data = new HashMap<String, String>();
//		Map<String, Object> params = new HashMap<String, Object>();
//		data.put("page", "0");
//		data.put("rows", row+"");
//		params.put("data", data);
//		CompanyTask task = new CompanyTask(CompanyTask.VISITEDINFO, params);
//		MainService.newTask(task);
//	}
//
//	@Override
//	public boolean onKeyDown(int keyCode, KeyEvent event) {
//		// TODO Auto-generated method stub
//		if (keyCode == KeyEvent.KEYCODE_BACK) {
//			exit();
//
//			return true;
//		}
//		return super.onKeyDown(keyCode, event);
//	}
//
//}



//import java.text.SimpleDateFormat;
//import java.util.ArrayList;
//import java.util.Arrays;
//import java.util.Date;
//import java.util.HashMap;
//import java.util.LinkedList;
//import java.util.Map;
//
//import org.json.JSONArray;
//import org.json.JSONException;
//import org.json.JSONObject;
//
//import android.app.Activity;
//import android.os.AsyncTask;
//import android.os.Bundle;
//import android.util.Log;
//import android.view.KeyEvent;
//import android.view.View;
//import android.widget.AdapterView;
//import android.widget.AdapterView.OnItemClickListener;
//import android.widget.ArrayAdapter;
//import android.widget.LinearLayout;
//import android.widget.ListView;
//import android.widget.Toast;
//
//import com.views.refresh.Base_Refresh;
//import com.views.refresh.Base_Refresh.OnRefreshListener;
//import com.example.companytask.CompanyTask;
//import com.example.hospital.R;
//import com.example.service.MainService;
//import com.fc.has.views.RefreshListView;
//import com.fc.helper.BaseActivity;
//import com.fc.helper.IActivity;
//import com.fc.unidentified.beans.UnideInfo;
//import com.fc.unidentified.beans.UnidentifiedAdapter;
//
//public class HasDiagnosisActivity extends BaseActivity implements IActivity{
//	/**ListView¿Ø¼þ**/
//    private ListView mListView;
//    private RefreshListView mPullListView;
//    private UnidentifiedAdapter adapter;
//    private ArrayList<UnideInfo> list;
//    private SimpleDateFormat mDateFormat = new SimpleDateFormat("MM-dd HH:mm");
//    private boolean mIsStart = true;
//    private static final int mLoadDataCount = 20;
//    public static final int VISITED_REFRESH = 1;
//    private String data;
//    private int row=20;
//    @Override
//    public void onCreate(Bundle savedInstanceState) {
//        super.onCreate(savedInstanceState);
//        setContentView(R.layout.list);
//        init();
//       // list=(LinearLayout)findViewById(R.id.list);
//       // mPullListView = new RefreshListView(this);
//        mPullListView =(RefreshListView) findViewById(R.id.list);
//        mPullListView.setPullLoadEnabled(false);
//        mPullListView.setScrollLoadEnabled(true);
//        
//        list = new ArrayList<UnideInfo>();
//        getPageList(row);
//        adapter=new UnidentifiedAdapter(this, list);
//        mListView = mPullListView.getRefreshableView();
//        mListView.setAdapter(adapter);
//        mListView.setOnItemClickListener(new OnItemClickListener() {
//            @Override
//            public void onItemClick(AdapterView<?> arg0, View view, int position, long id) {
//                //String text = mListItems.get(position) + ", index = " + (position + 1);
//                //Toast.makeText(PullRefreshListViewActivity.this, text, Toast.LENGTH_SHORT).show();
//            }
//        });
//        
//        mPullListView.setOnRefreshListener(new OnRefreshListener<ListView>() {
//            @Override
//            public void onPullDownToRefresh(Base_Refresh<ListView> refreshView) {
//                mIsStart = true;
//                //new GetDataTask().execute();
//            }
//
//            @Override
//            public void onPullUpToRefresh(Base_Refresh<ListView> refreshView) {
//                mIsStart = false;
//                new GetDataTask().execute();
//                mPullListView.getRefreshableView().setSelection(row);
//            }
//        });
//        setLastUpdateTime();
//        mPullListView.doPullRefreshing(true, 500);
//        adapter.notifyDataSetChanged();
//       // list.addView(mPullListView);
//        
//    }
//    
//    
//    private class GetDataTask extends AsyncTask<Void, Void, String> {
//
//        @Override
//        protected String doInBackground(Void... params) {
//            // Simulates a background job.
//            try {
//                Thread.sleep(3000);
//            } catch (InterruptedException e) {
//            }
//            return row+"";
//        }
//
//        @Override
//        protected void onPostExecute(String result) {
//            boolean hasMoreData = true;
//            if (mIsStart) {
//               // list.addFirst("Added after refresh...");
//            } else {
//                int end = row + mLoadDataCount;
//                if (end >= 1000) {
//                    end = 1000;
//                    hasMoreData = false;
//                }
//                
//                getPageList(end);
//                row = end;
//            }
//            
//            adapter.notifyDataSetChanged();
//            mPullListView.onPullDownRefreshComplete();
//            mPullListView.onPullUpRefreshComplete();
//            mPullListView.setHasMoreData(hasMoreData);
//            setLastUpdateTime();
//
//            super.onPostExecute(result);
//        }
//    }
//    
//    private void setLastUpdateTime() {
//        String text = formatDateTime(System.currentTimeMillis());
//        mPullListView.setLastUpdatedLabel(text);
//    }
//
//    private String formatDateTime(long time) {
//        if (0 == time) {
//            return "";
//        }
//        
//        return mDateFormat.format(new Date(time));
//    }
//    
//    @Override
//	public void init() {
//		MainService.addActivity(this);
//	}
//
//	@Override
//	public void refresh(Object... params) {
//		switch (Integer.valueOf(params[0].toString().trim())) {
//		case HasDiagnosisActivity.VISITED_REFRESH:
//			if (params[1] != null) {
//				data = params[1].toString().trim();
//				Log.i("aaaa", "" + data);
//				parseJsonList(data);
//				// showListView(list);
//			}
//		}
//	}
//
//	private void parseJsonList(String value) {
//		list.clear();
//		try {
//			JSONArray array = new JSONArray(value);
//			for (int i = 0; i < array.length(); i++) {
//				JSONObject object = array.getJSONObject(i);
//				UnideInfo info = new UnideInfo();
//				info.setCard(object.getString("CardNo"));
//				info.setName(object.getString("PatientName"));
//				info.setSex(object.getString("Gender"));
//				info.setAge(object.getString("Age"));
//				info.setAddress(object.getString("VisitAddr"));
//				info.setBirthDate(object.getString("BirthDate"));
//				info.setRCName(object.getString("RCName"));
//				info.setAppointVisitDate(object.getString("AppointVisitDate"));
//				info.setContactor(object.getString("Contactor"));
//				info.setContactPhone(object.getString("ContactPhone"));
//				info.setRegRemark(object.getString("RegRemark"));
//				info.setRegId(object.getInt("RegId"));
//				info.setPatientId(object.getInt("PatientId"));
//				
//					list.add(info);
//				
//
//			}
//			// adapter=new UnidentifiedAdapter(this, list);
//			// listView.setAdapter(adapter);
//		} catch (JSONException e) {
//			// TODO Auto-generated catch block
//			e.printStackTrace();
//		}
//	}
//
//	private void getPageList(int row) {
//		Map<String, String> data = new HashMap<String, String>();
//		Map<String, Object> params = new HashMap<String, Object>();
//		data.put("page", "0");
//		data.put("rows", row+"");
//		params.put("data", data);
//		CompanyTask task = new CompanyTask(CompanyTask.VISITEDINFO, params);
//		MainService.newTask(task);
//	}
//
//	@Override
//	public boolean onKeyDown(int keyCode, KeyEvent event) {
//		// TODO Auto-generated method stub
//		if (keyCode == KeyEvent.KEYCODE_BACK) {
//			exit();
//
//			return true;
//		}
//		return super.onKeyDown(keyCode, event);
//	}
//
//
//}

import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.Map;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import com.example.companytask.CompanyTask;
import com.example.hospital.R;
import com.example.service.MainService;
import com.fc.has.views.MyListViewPullDownAndUp.RefreshListener;
import com.fc.helper.BaseActivity;
import com.fc.helper.IActivity;
import com.fc.unidentified.beans.UnideInfo;
import com.fc.unidentified.beans.UnidentifiedAdapter;
import android.app.Activity;
import android.content.Intent;
import android.graphics.Color;
import android.os.Bundle;
import android.os.Handler;
import android.os.SystemClock;
import android.util.Log;
import android.view.KeyEvent;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemClickListener;
import android.widget.BaseAdapter;
import android.widget.TextView;
import android.widget.Toast;

public class HasDiagnosisActivity extends BaseActivity implements IActivity,OnItemClickListener{
	
	private MyListViewPullDownAndUp lv;
	Handler handler=new Handler();
    private UnidentifiedAdapter adapter;
    private ArrayList<UnideInfo> list=new ArrayList<UnideInfo>();;
    private SimpleDateFormat mDateFormat = new SimpleDateFormat("MM-dd HH:mm");
    private static final int mLoadDataCount = 5;
    public static final int VISITED_REFRESH = 1;
    private String data;
    private int row=5;
    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.list);
        init();
        lv=(MyListViewPullDownAndUp) findViewById(R.id.lv);
        getPageList(row);
       
        lv.setRefreshListener(new MyRefreshListener());
        lv.setOnItemClickListener(this);
    }
    
    class MyRefreshListener implements RefreshListener{ 
	       //´¦ÀíÏÂÀ­Ë¢ÐÂ
	           @Override
	           public void pullDownRefresh() { 
	               new Thread(new Runnable() { 
	                   @Override
	                   public void run() {
	                       SystemClock.sleep(2000);
	                       
	                       handler.post(new Runnable() { 
	                           @Override
	                           public void run() {
	                               adapter.notifyDataSetChanged();
	                               lv.onPulldownRefreshComplete();
	                               Toast.makeText(getApplicationContext(), "Êý¾ÝÌí¼ÓÍê³É",Toast.LENGTH_LONG).show();
	                               System.out.println(lv.getLastVisiblePosition()+"======="+adapter.getCount());
	                           }
	                       }); 
	                   }
	               }).start();
	           }
	   //´¦ÀíÉÏÀ­Ë¢ÐÂ
	           @Override
	           public void pullUpRefresh() {
	               new Thread(new Runnable() { 
	                   @Override
	                   public void run() {
	                       SystemClock.sleep(2000);
	                       int end = row + mLoadDataCount;
	                     if (end >= 1000) {
	                         end = 1000;
	                     }
	                     
	                     getPageList(end);
	                     row = end;
	                       handler.post(new Runnable() { 
	                           @Override
	                           public void run() {
	                               adapter.notifyDataSetChanged();
	                               lv.onPullupRefreshComplete();
	                               Toast.makeText(getApplicationContext(), "Êý¾ÝÌí¼ÓÍê³É",Toast.LENGTH_LONG).show();
	                               System.out.println(lv.getLastVisiblePosition()+"======="+adapter.getCount());
	                           }
	                       }); 
	                   }
	               }).start();
	           }
	       } 
    
    
    @Override
    public void onItemClick(AdapterView<?> parent, View view, int position,
    		long id) {
    	Intent intent=new Intent(HasDiagnosisActivity.this, HomeVisitPrescribeInfoActivity.class);
    	intent.putExtra("visit_info", list.get(position-1).getRegId());
    	Log.i("bb", "oiiiiiiiiiiiiiiiiiiiiii=="+position);
    	startActivity(intent);
    }
    
        @Override
    	public void init() {
    		MainService.addActivity(this);
    	}
    
    	@Override
    	public void refresh(Object... params) {
    		switch (Integer.valueOf(params[0].toString().trim())) {
    		case HasDiagnosisActivity.VISITED_REFRESH:
    			if (params[1] != null) {
    				data = params[1].toString().trim();
    				parseJsonList(data);
    				// showListView(list);
    			}
    		}
    	}
    
    	private void parseJsonList(String value) {
    		list.clear();
    		try {
    			JSONArray array = new JSONArray(value);
    			for (int i = 0; i < array.length(); i++) {
    				JSONObject object = array.getJSONObject(i);
    				UnideInfo info = new UnideInfo();
    				info.setCard(object.getString("CardNo"));
    				info.setName(object.getString("PatientName"));
    				info.setSex(object.getString("Gender"));
    				info.setAge(object.getString("Age"));
    				info.setAddress(object.getString("VisitAddr"));
    				info.setBirthDate(object.getString("BirthDate"));
    				info.setRCName(object.getString("RCName"));
    				info.setAppointVisitDate(object.getString("AppointVisitDate"));
    				info.setContactor(object.getString("Contactor"));
    				info.setContactPhone(object.getString("ContactPhone"));
    				info.setRegRemark(object.getString("RegRemark"));
    				info.setRegId(object.getInt("RegId"));
    				info.setPatientId(object.getInt("PatientId"));
    				
    					list.add(info);
    				
    
    			}
    			 adapter=new UnidentifiedAdapter(this, list);
    		        lv.setAdapter(adapter);
    		} catch (JSONException e) {
    			// TODO Auto-generated catch block
    			e.printStackTrace();
    		}
    	}
    
    	private void getPageList(int row) {
    		Map<String, String> data = new HashMap<String, String>();
    		Map<String, Object> params = new HashMap<String, Object>();
    		data.put("page", "0");
    		data.put("rows", row+"");
    		params.put("data", data);
    		CompanyTask task = new CompanyTask(CompanyTask.VISITEDINFO, params);
    		MainService.newTask(task);
    	}
    
    	@Override
    	public boolean onKeyDown(int keyCode, KeyEvent event) {
    		// TODO Auto-generated method stub
    		if (keyCode == KeyEvent.KEYCODE_BACK) {
    			exit();
    
    			return true;
    		}
    		return super.onKeyDown(keyCode, event);
    	}

		
}
